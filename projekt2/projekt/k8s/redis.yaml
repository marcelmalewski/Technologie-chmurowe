apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template: 
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis
        name: redis
        ports:
        - containerPort: 6379
        volumeMounts: 
        - name: redis-storage
          mountPath: /data/db
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim2
---

apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  selector:
    app: redis

#apiVersion: v1
#kind: Pod
#metadata:
#  name: redis
#spec:
#  containers:
#  - name: redis
#    image: redis:5.0.4
#    command:
#      - redis-server
#      - "/redis-master/redis.conf"
#    env:
#    - name: MASTER
#      value: "true"
#    ports:
#    - containerPort: 6379
#    resources:
#      limits:
#        cpu: "0.1"
#    volumeMounts:
#    - mountPath: /redis-master-data
#      name: data
#    - mountPath: /redis-master
#      name: config
#  volumes:
#    - name: data
#      emptyDir: {}
#    - name: config
#      configMap:
#        name: test-redis-config
#        items:
#        - key: redis-config
#          path: redis.conf